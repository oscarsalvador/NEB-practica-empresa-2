stages:
    - analysis
    - build
    # - test
    - deploy
    - dast




foss-sca-owasp-dependency-check:
    stage: analysis
    image: owasp/dependency-check:latest
    script:
        - ls
        # - /usr/share/dependency-check/bin/dependency-check.sh --enableExperimental --project "$CI_PROJECT_NAME" --scan . # --format HTML --out /tmp
        - /usr/share/dependency-check/bin/dependency-check.sh --project "$CI_PROJECT_NAME" --scan . # --format HTML --out /tmp
    allow_failure: true




sast-sonarqube:
    stage: analysis
    image: sonarsource/sonar-scanner-cli:latest
    script:
        - ls /builds/app-repos/frontend-code/
        - pwd
        - echo $SONAR_KEYSTORE_PW
        - echo $SONAR_TOKEN
        - ls truststore.jks
        - export SONAR_SCANNER_OPTS="-Djavax.net.ssl.trustStore="/builds/app-repos/frontend-code/truststore.jks" -Djavax.net.ssl.trustStorePassword=$SONAR_KEYSTORE_PW"
        - sonar-scanner
            -Dsonar.projectKey="$CI_PROJECT_NAME"
            -Dsonar.sources=.
            -Dsonar.host.url="https://sonar.gitlab.local/"
            -Dsonar.login="$SONAR_TOKEN"
            -X
    allow_failure: true




# los jobs que empiezan con . se saltan
.docker:
    stage: build
    # environment: pre
    tags:
        - Docker
    script:
        - echo "$TF_VAR_frontend_image"
        - echo $CI_PROJECT_NAME
        - az acr login -n $TF_VAR_acr_name
        - docker build --build-arg IMAGE_NAME=$TF_VAR_frontend_image -t $TF_VAR_frontend_image .
        - docker push $TF_VAR_frontend_image

docker:pro:
    extends: .docker
    environment:
        name: pro
    only:
        - master

docker:pre:
    extends: .docker
    environment:
        name: pre
    only:
        - develop




.deploy-img-in-aci:
    stage: deploy
    tags:
        - Azure
    script: 
        #- ACI_NAME=$(echo $TF_VAR_frontend_image | cut -d"." -f1)
        - az container restart --name $TF_VAR_frontend_container_group_name --resource-group $TF_VAR_resource_group_name
    when: manual

deploy:pro:
    extends: .deploy-img-in-aci
    environment:
        name: pro
    only:
        - master

deploy:pre:
    extends: .deploy-img-in-aci
    environment:
        name: pre
    only:
        - develop




arachni-dast:
    stage: dast
    image: arachni/arachni:latest
    before_script:
        - export PATH=$PATH:/usr/local/arachni/bin
    script:
        - arachni http://preacifesspruebapoc2.westeurope.azurecontainer.io:3000/ #--output-debug-verbosity=3 --report-save-path=report.afr
    only:
        - develop
    when: manual